////
/// Typography
/// @group typography
///
////

/// Font stack
$font-stack:            ('Helvetica', 'Arial', sans-serif);


/// Font variables for basic font settings and font-sizes
/// @example
///   .element {
///     font-size: font(size, 'xxl');
///     line-height: font(base, 'line-height');
///   }
$fonts: (
  base: (
    'stack':          $font-stack,
    'sans-serif':     ('brandon-grotesque', #{$font-stack}),
    'serif':          ('minion-pro', serif),
    'size':           100%,
    'line-height':    1.5,
    'regular-weight': 400,
    'thin-weight':    200
  ),
  size: (
    'xxs': 12px,
    'xs': 13px,
    's': 15px,
    'm': 16px,
    'l': 18px,
    'xl': 21px,
    'xxl': 24px,
    'xxxl': 28px,
    'xxxxl': 32px,
    'xxxxxl': 38px,
    'xxxxxxl': 52px
  )
);

/// Function to parse font map
@function font($font, $type: 'base') {
  @return map-get(map-get($fonts, $font), $type);
}


///
/// Viewport sized typography with minimum and maximum values
///
/// @author Eduardo Boucas (@eduardoboucas)
///
/// @link https://eduardoboucas.com/blog/2015/06/18/viewport-sized-typography-with-minimum-and-maximum-sizes.html
///
/// @param {Number}   $responsive  - Viewport-based size
/// @param {Number}   $min         - Minimum font size (px)
/// @param {Number}   $max         - Maximum font size (px)
///                                  (optional)
/// @param {Number}   $fallback    - Fallback for viewport-
///                                  based units (optional)
///
/// @example scss - 5vw font size (with 50px fallback), minumum of 35px and maximum of 150px
///  @include responsive-font(5vw, 35px, 150px, 50px);
///
@mixin responsive-font($responsive, $min, $max: false, $fallback: false) {
  $responsive-unitless: $responsive / ($responsive - $responsive + 1);
  $dimension: if(unit($responsive) == 'vh', 'height', 'width');
  $min-breakpoint: $min / $responsive-unitless * 100;

  @media (max-#{$dimension}: #{$min-breakpoint}) {
    font-size: $min;
  }

  @if $max {
    $max-breakpoint: $max / $responsive-unitless * 100;

    @media (min-#{$dimension}: #{$max-breakpoint}) {
      font-size: $max;
    }
  }

  @if $fallback {
    font-size: $fallback;
  }

  font-size: $responsive;
}
